Lab: SQL injection vulnerability allowing login bypass

üìù Descrizione

Questo laboratorio contiene una vulnerabilit√† di **SQL injection** nella funzione di login dell'applicazione.  
L'obiettivo √® sfruttare questa vulnerabilit√† per **effettuare l'accesso come utente administrator**, senza conoscerne la password.

---

‚öôÔ∏è Passaggi eseguiti

1. Ho aperto il lab e avviato **Burp Suite** con il proxy attivo.
2. Ho tentato un login con credenziali arbitrarie (es: `test:test`) per catturare la richiesta HTTP.
3. Ho inviato la richiesta di login a **Burp Repeater** per testare la vulnerabilit√†.
4. Ho modificato il parametro `username` nella richiesta, impostandolo su: administrator'-- e lasciato il campo `password` con un valore qualsiasi.
5. Ho inviato la richiesta modificata.
6. L‚Äôapplicazione ha effettuato correttamente il login come **administrator**.

---

üß† Ragionamento tecnico

La vulnerabilit√† risiede nel modo in cui viene costruita la query SQL sul backend, senza un‚Äôadeguata sanitizzazione dei dati di input.  
Probabilmente la query originale √® qualcosa di simile a:

SELECT * FROM users WHERE username = '<input>' AND password = '<input>';

Inserendo administrator'-- nel campo username, la query diventa:

SELECT * FROM users WHERE username = 'administrator'--' AND password = '...';

-- √® il commento in SQL, quindi il resto della query (inclusa la condizione sulla password) viene ignorato.

Di conseguenza, se l‚Äôutente administrator esiste nel database, la query restituir√† una riga valida e l‚Äôautenticazione avr√† successo.

‚úÖ Soluzione finale
Modificare il parametro username nella richiesta HTTP di login come segue:

username=administrator'--&password=anything

Dopo l‚Äôinvio della richiesta, si viene autenticati come administrator e il lab risulta completato con successo.
